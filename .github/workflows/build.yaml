on:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "helm/**"
      - "assets/**"
      - "**.md"
  push:
    branches:
      - main

name: Ensure parseable builds on all release targets
jobs:
  build-linux:
    name: Build for ${{matrix.target}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu # linux(arm)
          - x86_64-unknown-linux-gnu # linux(64 bit)
        include:
          - target: aarch64-unknown-linux-gnu
            openssl_package: libssl-dev:arm64
          - target: x86_64-unknown-linux-gnu
            openssl_package: libssl-dev

    steps:
      - uses: actions/checkout@v2

      - name: Install OpenSSL development packages
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.openssl_package }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: ${{ matrix.target }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{matrix.target}} --features "rdkafka-ssl,rdkafka-sasl"

  build-windows:
    name: Build for windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install OpenSSL
        run: |
          vcpkg install openssl:x64-windows-static
          echo "OPENSSL_DIR=C:/vcpkg/installed/x64-windows-static" >> $GITHUB_ENV
          echo "OPENSSL_STATIC=1" >> $GITHUB_ENV
        shell: bash

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal # minimal component installation (ie, no documentation)
          default: true
          override: true

      - name: Build on windows
        run: cargo build --target x86_64-pc-windows-msvc --features "rdkafka-ssl,rdkafka-sasl"

  build-macos:
    name: Build for ${{matrix.target}}
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - aarch64-apple-darwin # macos(arm)
          - x86_64-apple-darwin # macos(intel 64 bit)

    steps:
      - uses: actions/checkout@v2

      - name: Install OpenSSL
        run: brew install openssl@3

      - name: Set OpenSSL Environment Variables
        run: |
          echo "OPENSSL_DIR=$(brew --prefix openssl@3)" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: ${{ matrix.target }}
          override: true

      - name: Build on ${{ matrix.target }}
        run: cargo build --target ${{ matrix.target }} --features "rdkafka-ssl,rdkafka-sasl"
